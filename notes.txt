microservice ---> talking to each other through rabbitmq
 if posible dockerizate it
 
 
 -------------------------------------------------------
Solution Name
	AsyncCommsExample
	
Projects Name
	AsyncComms.ApiGateway(WebApi)
	AsyncComms.ApiGateway.BusinessLogic (dll) 
	AsyncComms.ApiGateway.BusinessLogic.Tests (nunit)
	AsyncComms.Messaging(dll)--> could be run as a console
	AsyncComms.Worker(WebApi)
	AsyncComms.Worker.BusinessLogic (dll) 
	AsyncComms.Worker.BusinessLogic.Tests (nunit)
	
	
	
dotnet new webapp -n "AsyncComms.ApiGateway" 
dotnet new classlib -n "AsyncComms.ApiGateway.BusinessLogic" 
dotnet new nunit -n "AsyncComms.ApiGateway.BusinessLogic.Tests" 
dotnet new classlib -n "AsyncComms.Messaging" 
dotnet new webapp -n "AsyncComms.Worker" 
dotnet new classlib -n "AsyncComms.Worker.BusinessLogic" 
dotnet new nunit -n "AsyncComms.Worker.BusinessLogic.Tests"  


git commit -m "{message here}"

After adding 
git rm --cached .
git add .
git status


----------------------------------------------------------
WebAPI receive a call --> send message to rabbitmq --> read it back 

we create a queue per received message so it will be creating when send and delete as soon as it is read (Queue in demand) the queue will be deleted when all the connection are closed

routing key --> GIC subscription --> message bus --> the message is routed depending on rules setup on advance (body, header,...)




sender									receiver
created a 								asking rabbitmq if there are queue? -->




try to get the communication from the web api to the worker as a console app to display 